name: deploy_api

on:
  push:
    paths:
      - "flutter_news_example/api/**"
      - ".github/workflows/deploy_api.yaml"
    branches:
      - main

env:
  PROJECT_ID: news-template-644a1
  SERVICE: google-news-template-api
  REGION: us-central1

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: dart-lang/setup-dart@v1

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1.0.1
        with:
          project_id: ${{ env.PROJECT_ID }}
          service_account_key: ${{ secrets.CLOUD_RUN_SA }}
          export_default_credentials: true

      - name: Install Dart Frog
        run: dart pub global activate dart_frog_cli

      - name: Create Production Build
        working-directory: ./flutter_news_example/api
        run: dart_frog build

      - name: Authorize Docker push
        run: gcloud auth configure-docker

      - name: Build and Push Container
        run: |-
          docker build -t gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }} flutter_news_example/api/build
          docker push gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v0.10.3
        with:
          service: ${{ env.SERVICE }}
          image: gcr.io/${{ env.PROJECT_ID }}/${{ env.SERVICE }}:${{ github.sha }}
          region: ${{ env.REGION }}

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

      - name: Ping
        run: curl "${{ steps.deploy.outputs.url }}"
